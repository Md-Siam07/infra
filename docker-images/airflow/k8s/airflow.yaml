apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: ClusterIP
  selector:
    app: airflow
    tier: db
  ports:
    - name: postgres
      protocol: TCP
      port: 5432
      targetPort: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: web
spec:
  type: NodePort
  selector:
    app: airflow
    tier: web
  ports:
    - name: web
      protocol: TCP
      port: 8080
      nodePort: 32080
      targetPort: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow
  template:
    metadata:
      labels:
        app: airflow
        tier: web
    spec:
      restartPolicy: Always
      containers:
        - name: web
          image: bigsidhu/airflow-local:latest
          args: ["webserver"]
          envFrom:
            - configMapRef:
                name: airflow-env-configmap 
          ports:
          - name: web
            containerPort: 8080
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 240
            periodSeconds: 60
          resources: {}
          volumeMounts:
            - name: logs-persistent-storage
              mountPath: /usr/local/airflow/logs
            - name: airflow-dags
              mountPath: /opt/airflow
              readOnly: true
        - name: git-sync-clone
          image: k8s.gcr.io/git-sync:v3.1.2
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: gitsync-env-configmap
          - secretRef:
              name: git-credentials
          volumeMounts:
            - mountPath: /git
              name: airflow-dags
      volumes:
        - name: logs-persistent-storage
          persistentVolumeClaim:
              claimName: airflow-logs-pvc
        - name: airflow-dags
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-scheduler
  labels:
    app: airflow-k8s
spec:
  selector:
    matchLabels:
      app: airflow-scheduler
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow-scheduler
    spec:
      containers:
        - name: web
          image: bigsidhu/airflow-local:latest
          args: ["scheduler"]
          envFrom:
            - configMapRef:
                name: airflow-env-configmap
          resources:
            limits:
              memory: "512Mi"
          volumeMounts:
            - name: logs-persistent-storage
              mountPath: /usr/local/airflow/logs
            - name: airflow-dags
              mountPath: /opt/airflow
              readOnly: true

        - name: git-sync-clone
          image: k8s.gcr.io/git-sync:v3.1.2
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: gitsync-env-configmap
          - secretRef:
              name: git-credentials
          volumeMounts:
            - mountPath: /git
              name: airflow-dags
      volumes:
        - name: logs-persistent-storage
          persistentVolumeClaim:
              claimName: airflow-logs-pvc    
        - name: airflow-dags
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow
  template:
    metadata:
      labels:
        app: airflow
        tier: db
    spec:
      containers:
      - name: postgres
        image: postgres
        ports:
        - name: postgres
          containerPort: 5432
        env:
         - name: POSTGRES_USER
           value: "airflow"
         - name: POSTGRES_PASSWORD
           value: "airflow"
         - name: POSTGRES_DB
           value: "airflow"
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: postgres-claim0
        persistentVolumeClaim:
          claimName: postgres-claim0
