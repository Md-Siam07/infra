version: '3'

services:
  # Configuration for reverse proxy
  traefik:
    image: traefik:v2.4.11
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  postgres:
    image: docker.io/postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      # For persisting data
      - PGDATA=/var/lib/postgresql/data/pgdata
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - /opt/pgdata:/var/lib/postgresql/data/pgdata

  # Configuration for Hub+Proxy
  jupyterhub:
    image: docker.io/bigsidhu/jupyterhub                # Build the container from this folder.
    container_name: jupyterhub   # The service will use this container name.
    environment:                     # Env variables passed to the Hub process.
      DOCKER_JUPYTER_IMAGE: docker.io/bigsidhu/jupyter-notebook:latest
      DOCKER_NETWORK_NAME: docker-images_default
      HUB_IP: jupyterhub
    restart: unless-stopped
    volumes:                         # Give access to Docker socket.
      - /var/run/docker.sock:/var/run/docker.sock
    labels:                          # Traefik configuration.
      - "traefik.enable=true"
      - "traefik.http.routers.jupyterhub.rule=Host(`jupyter.dev.lan`)"
      - "traefik.http.routers.jupyterhub.entrypoints=web"

  jupyterlab:
    image: docker.io/bigsidhu/jupyter-notebook
    container_name: jupyterlab
    environment:
      - JUPYTER_ENABLE_LAB=yes
    ports:
      - "8888:8888"
    restart: unless-stopped
    volumes:
      - ${PWD}:/home/jovyan/work

  mlflow:
    image: mlflow
    container_name: mlflow
    environment:
      - DEFAULT_ARTIFACT_ROOT=/home/mlflow/mlruns
    depends_on:
      - postgres
    ports:
      - "5000:5000"
    restart: unless-stopped
    # Extra mounts, i.e for your artifact store if you are using NFS
    volumes:
      - /opt/mlflow/mlruns:/home/mlflow/mlruns
    labels:                          # Traefik configuration.
      - "traefik.enable=true"
      - "traefik.http.routers.mlflow.rule=Host(`mlflow.dev.lan`)"
      - "traefik.http.routers.mlflow.entrypoints=web"
